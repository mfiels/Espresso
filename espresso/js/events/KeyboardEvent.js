// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['espresso/events/Event'], function(Event) {
    /*
    	# A class for keyDown and keyUp events.
    */

    var KeyboardEvent;
    return KeyboardEvent = (function(_super) {

      __extends(KeyboardEvent, _super);

      /*
      		# Create a KeyboardEvent from a DOM event.
      */


      KeyboardEvent.fromDOMEvent = function(e) {
        return new KeyboardEvent(e.keyCode, String.fromCharCode(e.keyCode), e.type === 'keydown' ? 'keyDown' : e.type === 'keyup' ? 'keyUp' : '');
      };

      /*
      		# Construct a KeyboardEvent.
      */


      function KeyboardEvent(keyCode, keyChar, type) {
        this.keyCode = keyCode;
        this.keyChar = keyChar;
        KeyboardEvent.__super__.constructor.call(this, type);
      }

      return KeyboardEvent;

    })(Event);
  });

}).call(this);
