// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require.config({
    paths: {
      'espresso': '../../espresso/js'
    }
  });

  define('Block', ['espresso/display/Sprite', 'espresso/display/Stage'], function(Sprite, Stage) {
    var Block;
    return Block = (function(_super) {

      __extends(Block, _super);

      function Block(x, y) {
        Block.__super__.constructor.call(this, x, y);
        this.setSource('img/block.png');
        this.vx = (Math.random() * 3 + 1) * (Math.random() > 0.5 ? -1 : 1);
        this.vy = (Math.random() * 3 + 1) * (Math.random() > 0.5 ? -1 : 1);
        this.vr = (Math.random() + 0.25) * (Math.random() > 0.5 ? -1 : 1);
        this.paused = false;
        this.anchorX = this.anchorY = 236 / 2;
      }

      Block.prototype.clicked = function() {
        return this.paused = !this.paused;
      };

      Block.prototype.update = function(e) {
        if (this.paused) {
          return;
        }
        this.x += this.vx * e.elapsed / 17;
        this.y += this.vy * e.elapsed / 17;
        this.rotation += this.vr;
        if (this.x > Stage.canvas.width - this.width) {
          this.x = Stage.canvas.width - this.width;
          this.vx *= -1;
        } else if (this.x < 0) {
          this.x = 0;
          this.vx *= -1;
        }
        if (this.y > Stage.canvas.height - this.height) {
          this.y = Stage.canvas.height - this.height;
          this.vy *= -1;
        } else if (this.y < 0) {
          this.y = 0;
          this.vy *= -1;
        }
        return this.rotation += 0.1;
      };

      return Block;

    })(Sprite);
  });

  require(['espresso/display/DisplayObject', 'Block', 'espresso/display/Stage', 'espresso/events/Input'], function(DisplayObject, Block, Stage, Input) {
    var block, blocks, canvas, i, stage, _i;
    canvas = document.getElementById('canvas');
    canvas.width = document.width || window.screen.width;
    canvas.height = document.height || window.screen.height;
    window.onresize = function(e) {
      canvas.width = document.width || window.screen.width;
      return canvas.height = document.height || window.screen.height;
    };
    stage = new Stage(canvas);
    window.blocks = blocks = [];
    for (i = _i = 0; _i <= 5; i = ++_i) {
      block = new Block(Math.random() * (canvas.width - 236), Math.random() * (canvas.height - 236));
      block.addEventListener('mouseUp', function(e) {
        return e.target.clicked();
      });
      blocks.push(block);
      stage.addChild(block);
    }
    return stage.addEventListener('enterFrame', function(e) {
      var _j, _len, _results;
      _results = [];
      for (_j = 0, _len = blocks.length; _j < _len; _j++) {
        block = blocks[_j];
        _results.push(block.update(e));
      }
      return _results;
    });
  });

}).call(this);
